{"ast":null,"code":"var _jsxFileName = \"/home/mh/Projects/weather-forcast/src/components/CompleteForcast.js\";\nimport React from 'react';\nimport GetDailyForcast from './GetDailyForcast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompleteForcast = _ref => {\n  let {\n    forcastDetail,\n    NoOfDays\n  } = _ref;\n  const currentDate = new Date().getTime();\n\n  // Group items based on date\n  const groupedForcast = forcastDetail.reduce((result, item) => {\n    const date = new Date(item.ForcastDate);\n    const dateString = date.toDateString();\n    if (!result[dateString]) {\n      result[dateString] = [];\n    }\n    result[dateString].push(item);\n    return result;\n  }, {});\n  return Object.keys(groupedForcast).map(dateString => {\n    const date = new Date(dateString).getTime();\n    const difference = Math.abs(currentDate - date);\n    const days = Math.ceil(difference / (1000 * 60 * 60 * 24));\n    console.log(days);\n    if (days === 0) {\n      const items = groupedForcast[dateString];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dateString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), items.map(item => /*#__PURE__*/_jsxDEV(GetDailyForcast, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))]\n      }, dateString, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    }\n    if (days < NoOfDays) {\n      const items = groupedForcast[dateString];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dateString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GetDailyForcast, {\n          items: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, dateString, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  });\n};\n_c = CompleteForcast;\nexport default CompleteForcast;\nvar _c;\n$RefreshReg$(_c, \"CompleteForcast\");","map":{"version":3,"names":["React","GetDailyForcast","jsxDEV","_jsxDEV","CompleteForcast","_ref","forcastDetail","NoOfDays","currentDate","Date","getTime","groupedForcast","reduce","result","item","date","ForcastDate","dateString","toDateString","push","Object","keys","map","difference","Math","abs","days","ceil","console","log","items","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/mh/Projects/weather-forcast/src/components/CompleteForcast.js"],"sourcesContent":["import React from 'react';\nimport GetDailyForcast from './GetDailyForcast';\n\nconst CompleteForcast = ({ forcastDetail, NoOfDays }) => {\n    const currentDate = new Date().getTime();\n\n    // Group items based on date\n    const groupedForcast = forcastDetail.reduce((result, item) => {\n        const date = new Date(item.ForcastDate);\n        const dateString = date.toDateString();\n        if (!result[dateString]) {\n            result[dateString] = [];\n        }\n        result[dateString].push(item);\n        return result;\n    }, {});\n\n    return Object.keys(groupedForcast).map((dateString) => {\n        const date = new Date(dateString).getTime();\n        const difference = Math.abs(currentDate - date);\n        const days = Math.ceil(difference / (1000 * 60 * 60 * 24));\n        console.log(days)\n        if (days === 0) {\n            const items = groupedForcast[dateString];\n            return (\n                <div key={dateString}>\n                    <h2>{dateString}</h2>\n                    {items.map((item) => (\n                        <GetDailyForcast key={item.id} item={item} />\n                    ))}\n                </div>\n            );\n        }\n\n\n        if (days < NoOfDays) {\n            const items = groupedForcast[dateString];\n            return (\n                <div key={dateString}>\n                    <h2>{dateString}</h2>\n                    <GetDailyForcast items={items} />\n                </div>\n            );\n        }\n        return null;\n    });\n};\n\nexport default CompleteForcast;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGC,IAAA,IAAiC;EAAA,IAAhC;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChD,MAAMG,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;;EAExC;EACA,MAAMC,cAAc,GAAGL,aAAa,CAACM,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAK;IAC1D,MAAMC,IAAI,GAAG,IAAIN,IAAI,CAACK,IAAI,CAACE,WAAW,CAAC;IACvC,MAAMC,UAAU,GAAGF,IAAI,CAACG,YAAY,CAAC,CAAC;IACtC,IAAI,CAACL,MAAM,CAACI,UAAU,CAAC,EAAE;MACrBJ,MAAM,CAACI,UAAU,CAAC,GAAG,EAAE;IAC3B;IACAJ,MAAM,CAACI,UAAU,CAAC,CAACE,IAAI,CAACL,IAAI,CAAC;IAC7B,OAAOD,MAAM;EACjB,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAOO,MAAM,CAACC,IAAI,CAACV,cAAc,CAAC,CAACW,GAAG,CAAEL,UAAU,IAAK;IACnD,MAAMF,IAAI,GAAG,IAAIN,IAAI,CAACQ,UAAU,CAAC,CAACP,OAAO,CAAC,CAAC;IAC3C,MAAMa,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACjB,WAAW,GAAGO,IAAI,CAAC;IAC/C,MAAMW,IAAI,GAAGF,IAAI,CAACG,IAAI,CAACJ,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1DK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAIA,IAAI,KAAK,CAAC,EAAE;MACZ,MAAMI,KAAK,GAAGnB,cAAc,CAACM,UAAU,CAAC;MACxC,oBACId,OAAA;QAAA4B,QAAA,gBACI5B,OAAA;UAAA4B,QAAA,EAAKd;QAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACpBL,KAAK,CAACR,GAAG,CAAER,IAAI,iBACZX,OAAA,CAACF,eAAe;UAAea,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACsB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAC/C,CAAC;MAAA,GAJIlB,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CAAC;IAEd;IAGA,IAAIT,IAAI,GAAGnB,QAAQ,EAAE;MACjB,MAAMuB,KAAK,GAAGnB,cAAc,CAACM,UAAU,CAAC;MACxC,oBACId,OAAA;QAAA4B,QAAA,gBACI5B,OAAA;UAAA4B,QAAA,EAAKd;QAAU;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBhC,OAAA,CAACF,eAAe;UAAC6B,KAAK,EAAEA;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAF3BlB,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CAAC;IAEd;IACA,OAAO,IAAI;EACf,CAAC,CAAC;AACN,CAAC;AAACE,EAAA,GA3CIjC,eAAe;AA6CrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}